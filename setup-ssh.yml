---
- name: Управление SSH-ключами и отключение парольной аутентификации на серверах кластера
  hosts: all
  become: true
  tasks:
    # Проверяем наличие директории /root/.ssh, если её нет — создаем с нужными правами
    - name: Убедиться, что директория .ssh существует
      file:
        path: /root/.ssh
        state: directory
        mode: '0700'
        owner: root
        group: root

    # Проверяем, содержится ли публичный ключ уже в authorized_keys
    - name: Проверить, содержится ли публичный ключ в authorized_keys
      shell: |
        grep -Fxq "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}" /root/.ssh/authorized_keys && echo "present" || echo "absent"
      register: key_check
      changed_when: false

    # Добавляем публичный ключ в authorized_keys, если его там ещё нет
    - name: Добавить публичный ключ в authorized_keys, если его там нет
      lineinfile:
        path: /root/.ssh/authorized_keys
        line: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
        create: yes
        owner: root
        group: root
        mode: '0600'
      when: key_check.stdout == "absent"

    # Проверяем возможность подключения по ключу
    - name: Проверить подключение по приватному ключу
      delegate_to: localhost
      shell: |
        ssh -o BatchMode=yes -o ConnectTimeout=5 -i /root/.ssh/id_rsa root@{{ inventory_hostname }} exit
      register: ssh_test
      changed_when: false
      failed_when: ssh_test.rc != 0

    # Отключаем аутентификацию по паролю, изменяя конфигурацию SSH
    - name: Отключить парольную аутентификацию на целевых серверах
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present

    # Перезапускаем службу SSH для применения изменений
    - name: Перезапустить службу SSH на целевых серверах
      service:
        name: sshd
        state: restarted
