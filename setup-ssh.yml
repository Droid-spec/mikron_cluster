---
- name: Настройка SSH-доступа для кластера
  hosts: all
  become: yes  # Поднимаем права до root
  vars:
    ansible_ssh_private_key_file: /etc/ansible/keys/id_rsa_ansible
    ansible_ssh_public_key_file: /etc/ansible/keys/id_rsa_ansible.pub

  tasks:
    # 1. Генерация SSH-ключа на главном сервере, если его нет
    - name: Генерация SSH-ключа на главном сервере
      command: ssh-keygen -t rsa -b 4096 -f /etc/ansible/keys/id_rsa_ansible -N ""
      args:
        creates: /etc/ansible/keys/id_rsa_ansible  # Генерация будет пропущена, если ключ уже существует
      when: inventory_hostname == 'главный_сервер'  # Замените 'главный_сервер' на имя вашего главного сервера

    # 2. Проверка существования публичного ключа на главном сервере
    - name: Проверка наличия публичного ключа главного сервера
      stat:
        path: /etc/ansible/keys/id_rsa_ansible.pub
      register: key_check

    - name: Остановить выполнение, если публичный ключ не найден
      fail:
        msg: "Публичный ключ /etc/ansible/keys/id_rsa_ansible.pub не найден на главном сервере!"
      when: not key_check.stat.exists

    # 3. Копирование публичного ключа главного сервера на сервера кластера
    - name: Копирование публичного ключа главного сервера на сервера кластера
      copy:
        src: /etc/ansible/keys/id_rsa_ansible.pub
        dest: /root/.ssh/authorized_keys
        owner: root
        mode: '0600'
      when: key_check.stat.exists
      notify: Restart SSH

    # 4. Генерация SSH-ключа на серверах (если они не существуют)
    - name: Генерация SSH-ключа на серверах
      command: ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -N ""
      args:
        creates: /root/.ssh/id_rsa  # Генерация будет пропущена, если ключ уже существует

    # 5. Проверка подключения по ключу
    - name: Проверка подключения по ключу
      shell: ssh -o PasswordAuthentication=no -o StrictHostKeyChecking=no root@{{ inventory_hostname }} exit
      register: ssh_check
      ignore_errors: true  # Игнорируем ошибки, чтобы обработать их вручную позже

    - name: Убедиться, что вход по ключу работает
      fail:
        msg: "Не удалось подключиться по ключу к серверу {{ inventory_hostname }}!"
      when: ssh_check.rc != 0  # Ошибка, если код возврата команды не равен 0

    # 6. Отключить вход по паролю
    - name: Отключить вход по паролю
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present
      notify:
        - Перезапуск SSH

    # 7. Повторная проверка подключения по ключу
    - name: Повторная проверка подключения по ключу
      shell: ssh -o PasswordAuthentication=no -o StrictHostKeyChecking=no root@{{ inventory_hostname }} exit
      register: final_ssh_check
      ignore_errors: true

    - name: Убедиться, что вход по ключу после отключения пароля работает
      fail:
        msg: "После отключения входа по паролю невозможно подключиться к серверу {{ inventory_hostname }}!"
      when: final_ssh_check.rc != 0

  handlers:
    - name: Перезапуск SSH
      service:
        name: ssh
        state: restarted
